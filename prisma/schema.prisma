generator js {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(30)
  email       String   @unique @db.VarChar(60)
  password    String   @db.VarChar(255)
  phoneNumber String   @db.VarChar(15)
  cin         String   @db.VarChar(10)
  isManager   Boolean
  create_time DateTime @default(now())
  update_time DateTime @default(now())
}

model Hotel {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(30)
  address     String   @db.VarChar(255)
  stars       Int
  create_time DateTime @default(now())
  update_time DateTime @default(now())
  Floor       Floor[]
  Room        Room[]
}

model Floor {
  id          Int      @id @default(autoincrement())
  number      Int
  hotelId     Int
  create_time DateTime @default(now())
  update_time DateTime @default(now())
  hotel       Hotel    @relation(fields: [hotelId], references: [id])
  Room        Room[]

  @@index([hotelId])
}

model RoomType {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(30)
  price       Float
  create_time DateTime @default(now())
  update_time DateTime @default(now())
  Room        Room[]
}

model Room {
  id          Int           @id @default(autoincrement())
  number      Int
  floorId     Int
  typeId      Int
  hotelId     Int
  create_time DateTime      @default(now())
  update_time DateTime      @default(now())
  floor       Floor         @relation(fields: [floorId], references: [id])
  type        RoomType      @relation(fields: [typeId], references: [id])
  hotel       Hotel         @relation(fields: [hotelId], references: [id])
  Reservation Reservation[]

  @@index([floorId])
  @@index([typeId])
  @@index([hotelId])
}

model Client {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(30)
  email       String        @db.VarChar(60)
  phoneNumber String        @db.VarChar(15)
  cin         String        @db.VarChar(10)
  create_time DateTime      @default(now())
  update_time DateTime      @default(now())
  Reservation Reservation[]
}

model Reservation {
  id          Int      @id @default(autoincrement())
  clientId    Int
  userId      Int
  roomId      Int
  checkIn     DateTime
  checkOut    DateTime
  create_time DateTime @default(now())
  update_time DateTime @default(now())
  client      Client   @relation(fields: [clientId], references: [id])
  room        Room     @relation(fields: [roomId], references: [id])

  @@index([clientId])
  @@index([roomId])
}
